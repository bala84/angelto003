//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.1433
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Angel_to_001 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ANGEL_TO_001_Employee")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ANGEL_TO_001_Employee : global::System.Data.DataSet {
        
        private utfVPRT_EMPLOYEEDataTable tableutfVPRT_EMPLOYEE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ANGEL_TO_001_Employee() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ANGEL_TO_001_Employee(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["utfVPRT_EMPLOYEE"] != null)) {
                    base.Tables.Add(new utfVPRT_EMPLOYEEDataTable(ds.Tables["utfVPRT_EMPLOYEE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public utfVPRT_EMPLOYEEDataTable utfVPRT_EMPLOYEE {
            get {
                return this.tableutfVPRT_EMPLOYEE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ANGEL_TO_001_Employee cln = ((ANGEL_TO_001_Employee)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["utfVPRT_EMPLOYEE"] != null)) {
                    base.Tables.Add(new utfVPRT_EMPLOYEEDataTable(ds.Tables["utfVPRT_EMPLOYEE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableutfVPRT_EMPLOYEE = ((utfVPRT_EMPLOYEEDataTable)(base.Tables["utfVPRT_EMPLOYEE"]));
            if ((initTable == true)) {
                if ((this.tableutfVPRT_EMPLOYEE != null)) {
                    this.tableutfVPRT_EMPLOYEE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ANGEL_TO_001_Employee";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ANGEL_TO_001_DEVDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableutfVPRT_EMPLOYEE = new utfVPRT_EMPLOYEEDataTable();
            base.Tables.Add(this.tableutfVPRT_EMPLOYEE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeutfVPRT_EMPLOYEE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ANGEL_TO_001_Employee ds = new ANGEL_TO_001_Employee();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void utfVPRT_EMPLOYEERowChangeEventHandler(object sender, utfVPRT_EMPLOYEERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class utfVPRT_EMPLOYEEDataTable : global::System.Data.TypedTableBase<utfVPRT_EMPLOYEERow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnsys_status;
            
            private global::System.Data.DataColumn columnsys_comment;
            
            private global::System.Data.DataColumn columnsys_date_modified;
            
            private global::System.Data.DataColumn columnsys_date_created;
            
            private global::System.Data.DataColumn columnsys_user_modified;
            
            private global::System.Data.DataColumn columnsys_user_created;
            
            private global::System.Data.DataColumn columnorganization_id;
            
            private global::System.Data.DataColumn columnperson_id;
            
            private global::System.Data.DataColumn columnemployee_type_id;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnFIO;
            
            private global::System.Data.DataColumn columnbirthdate;
            
            private global::System.Data.DataColumn columnmobile_phone;
            
            private global::System.Data.DataColumn columnhome_phone;
            
            private global::System.Data.DataColumn columnwork_phone;
            
            private global::System.Data.DataColumn columnorg_name;
            
            private global::System.Data.DataColumn columnjob_title;
            
            private global::System.Data.DataColumn columnlastname;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnsurname;
            
            private global::System.Data.DataColumn columnshort_FIO;
            
            private global::System.Data.DataColumn columndriver_license;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVPRT_EMPLOYEEDataTable() {
                this.TableName = "utfVPRT_EMPLOYEE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal utfVPRT_EMPLOYEEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected utfVPRT_EMPLOYEEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_statusColumn {
                get {
                    return this.columnsys_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_commentColumn {
                get {
                    return this.columnsys_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_date_modifiedColumn {
                get {
                    return this.columnsys_date_modified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_date_createdColumn {
                get {
                    return this.columnsys_date_created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_user_modifiedColumn {
                get {
                    return this.columnsys_user_modified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_user_createdColumn {
                get {
                    return this.columnsys_user_created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn organization_idColumn {
                get {
                    return this.columnorganization_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn person_idColumn {
                get {
                    return this.columnperson_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employee_type_idColumn {
                get {
                    return this.columnemployee_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIOColumn {
                get {
                    return this.columnFIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn birthdateColumn {
                get {
                    return this.columnbirthdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mobile_phoneColumn {
                get {
                    return this.columnmobile_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn home_phoneColumn {
                get {
                    return this.columnhome_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn work_phoneColumn {
                get {
                    return this.columnwork_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn org_nameColumn {
                get {
                    return this.columnorg_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn job_titleColumn {
                get {
                    return this.columnjob_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastnameColumn {
                get {
                    return this.columnlastname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn surnameColumn {
                get {
                    return this.columnsurname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn short_FIOColumn {
                get {
                    return this.columnshort_FIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_licenseColumn {
                get {
                    return this.columndriver_license;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVPRT_EMPLOYEERow this[int index] {
                get {
                    return ((utfVPRT_EMPLOYEERow)(this.Rows[index]));
                }
            }
            
            public event utfVPRT_EMPLOYEERowChangeEventHandler utfVPRT_EMPLOYEERowChanging;
            
            public event utfVPRT_EMPLOYEERowChangeEventHandler utfVPRT_EMPLOYEERowChanged;
            
            public event utfVPRT_EMPLOYEERowChangeEventHandler utfVPRT_EMPLOYEERowDeleting;
            
            public event utfVPRT_EMPLOYEERowChangeEventHandler utfVPRT_EMPLOYEERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddutfVPRT_EMPLOYEERow(utfVPRT_EMPLOYEERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVPRT_EMPLOYEERow AddutfVPRT_EMPLOYEERow(
                        decimal id, 
                        byte sys_status, 
                        string sys_comment, 
                        System.DateTime sys_date_modified, 
                        System.DateTime sys_date_created, 
                        string sys_user_modified, 
                        string sys_user_created, 
                        decimal organization_id, 
                        decimal person_id, 
                        decimal employee_type_id, 
                        string sex, 
                        string FIO, 
                        System.DateTime birthdate, 
                        string mobile_phone, 
                        string home_phone, 
                        string work_phone, 
                        string org_name, 
                        string job_title, 
                        string lastname, 
                        string name, 
                        string surname, 
                        string short_FIO, 
                        string driver_license) {
                utfVPRT_EMPLOYEERow rowutfVPRT_EMPLOYEERow = ((utfVPRT_EMPLOYEERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        sys_status,
                        sys_comment,
                        sys_date_modified,
                        sys_date_created,
                        sys_user_modified,
                        sys_user_created,
                        organization_id,
                        person_id,
                        employee_type_id,
                        sex,
                        FIO,
                        birthdate,
                        mobile_phone,
                        home_phone,
                        work_phone,
                        org_name,
                        job_title,
                        lastname,
                        name,
                        surname,
                        short_FIO,
                        driver_license};
                rowutfVPRT_EMPLOYEERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowutfVPRT_EMPLOYEERow);
                return rowutfVPRT_EMPLOYEERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                utfVPRT_EMPLOYEEDataTable cln = ((utfVPRT_EMPLOYEEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new utfVPRT_EMPLOYEEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnsys_status = base.Columns["sys_status"];
                this.columnsys_comment = base.Columns["sys_comment"];
                this.columnsys_date_modified = base.Columns["sys_date_modified"];
                this.columnsys_date_created = base.Columns["sys_date_created"];
                this.columnsys_user_modified = base.Columns["sys_user_modified"];
                this.columnsys_user_created = base.Columns["sys_user_created"];
                this.columnorganization_id = base.Columns["organization_id"];
                this.columnperson_id = base.Columns["person_id"];
                this.columnemployee_type_id = base.Columns["employee_type_id"];
                this.columnsex = base.Columns["sex"];
                this.columnFIO = base.Columns["FIO"];
                this.columnbirthdate = base.Columns["birthdate"];
                this.columnmobile_phone = base.Columns["mobile_phone"];
                this.columnhome_phone = base.Columns["home_phone"];
                this.columnwork_phone = base.Columns["work_phone"];
                this.columnorg_name = base.Columns["org_name"];
                this.columnjob_title = base.Columns["job_title"];
                this.columnlastname = base.Columns["lastname"];
                this.columnname = base.Columns["name"];
                this.columnsurname = base.Columns["surname"];
                this.columnshort_FIO = base.Columns["short_FIO"];
                this.columndriver_license = base.Columns["driver_license"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnsys_status = new global::System.Data.DataColumn("sys_status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_status);
                this.columnsys_comment = new global::System.Data.DataColumn("sys_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_comment);
                this.columnsys_date_modified = new global::System.Data.DataColumn("sys_date_modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_date_modified);
                this.columnsys_date_created = new global::System.Data.DataColumn("sys_date_created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_date_created);
                this.columnsys_user_modified = new global::System.Data.DataColumn("sys_user_modified", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_user_modified);
                this.columnsys_user_created = new global::System.Data.DataColumn("sys_user_created", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_user_created);
                this.columnorganization_id = new global::System.Data.DataColumn("organization_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorganization_id);
                this.columnperson_id = new global::System.Data.DataColumn("person_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperson_id);
                this.columnemployee_type_id = new global::System.Data.DataColumn("employee_type_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployee_type_id);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnFIO = new global::System.Data.DataColumn("FIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO);
                this.columnbirthdate = new global::System.Data.DataColumn("birthdate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthdate);
                this.columnmobile_phone = new global::System.Data.DataColumn("mobile_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmobile_phone);
                this.columnhome_phone = new global::System.Data.DataColumn("home_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhome_phone);
                this.columnwork_phone = new global::System.Data.DataColumn("work_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwork_phone);
                this.columnorg_name = new global::System.Data.DataColumn("org_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorg_name);
                this.columnjob_title = new global::System.Data.DataColumn("job_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjob_title);
                this.columnlastname = new global::System.Data.DataColumn("lastname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastname);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnsurname = new global::System.Data.DataColumn("surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsurname);
                this.columnshort_FIO = new global::System.Data.DataColumn("short_FIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshort_FIO);
                this.columndriver_license = new global::System.Data.DataColumn("driver_license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_license);
                this.columnsys_comment.MaxLength = 2000;
                this.columnsys_user_modified.MaxLength = 30;
                this.columnsys_user_created.MaxLength = 30;
                this.columnFIO.MaxLength = 222;
                this.columnmobile_phone.MaxLength = 2000;
                this.columnhome_phone.MaxLength = 2000;
                this.columnwork_phone.MaxLength = 2000;
                this.columnorg_name.MaxLength = 100;
                this.columnjob_title.MaxLength = 30;
                this.columnlastname.MaxLength = 100;
                this.columnname.MaxLength = 60;
                this.columnsurname.MaxLength = 60;
                this.columnshort_FIO.MaxLength = 106;
                this.columndriver_license.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVPRT_EMPLOYEERow NewutfVPRT_EMPLOYEERow() {
                return ((utfVPRT_EMPLOYEERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new utfVPRT_EMPLOYEERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(utfVPRT_EMPLOYEERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.utfVPRT_EMPLOYEERowChanged != null)) {
                    this.utfVPRT_EMPLOYEERowChanged(this, new utfVPRT_EMPLOYEERowChangeEvent(((utfVPRT_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.utfVPRT_EMPLOYEERowChanging != null)) {
                    this.utfVPRT_EMPLOYEERowChanging(this, new utfVPRT_EMPLOYEERowChangeEvent(((utfVPRT_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.utfVPRT_EMPLOYEERowDeleted != null)) {
                    this.utfVPRT_EMPLOYEERowDeleted(this, new utfVPRT_EMPLOYEERowChangeEvent(((utfVPRT_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.utfVPRT_EMPLOYEERowDeleting != null)) {
                    this.utfVPRT_EMPLOYEERowDeleting(this, new utfVPRT_EMPLOYEERowChangeEvent(((utfVPRT_EMPLOYEERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveutfVPRT_EMPLOYEERow(utfVPRT_EMPLOYEERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ANGEL_TO_001_Employee ds = new ANGEL_TO_001_Employee();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "utfVPRT_EMPLOYEEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class utfVPRT_EMPLOYEERow : global::System.Data.DataRow {
            
            private utfVPRT_EMPLOYEEDataTable tableutfVPRT_EMPLOYEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal utfVPRT_EMPLOYEERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableutfVPRT_EMPLOYEE = ((utfVPRT_EMPLOYEEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVPRT_EMPLOYEE.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'id\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte sys_status {
                get {
                    try {
                        return ((byte)(this[this.tableutfVPRT_EMPLOYEE.sys_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sys_status\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sys_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sys_comment {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.sys_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sys_comment\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sys_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime sys_date_modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableutfVPRT_EMPLOYEE.sys_date_modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sys_date_modified\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sys_date_modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime sys_date_created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableutfVPRT_EMPLOYEE.sys_date_createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sys_date_created\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sys_date_createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sys_user_modified {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.sys_user_modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sys_user_modified\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sys_user_modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sys_user_created {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.sys_user_createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sys_user_created\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sys_user_createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal organization_id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVPRT_EMPLOYEE.organization_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'organization_id\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.organization_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal person_id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVPRT_EMPLOYEE.person_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'person_id\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.person_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal employee_type_id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVPRT_EMPLOYEE.employee_type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'employee_type_id\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.employee_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sex {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.sexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'sex\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIO {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.FIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'FIO\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.FIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime birthdate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableutfVPRT_EMPLOYEE.birthdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'birthdate\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.birthdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mobile_phone {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.mobile_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'mobile_phone\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.mobile_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string home_phone {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.home_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'home_phone\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.home_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string work_phone {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.work_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'work_phone\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.work_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string org_name {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.org_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'org_name\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.org_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string job_title {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.job_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'job_title\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.job_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lastname {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.lastnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'lastname\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.lastnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'name\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string surname {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.surnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'surname\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.surnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string short_FIO {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.short_FIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'short_FIO\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.short_FIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driver_license {
                get {
                    try {
                        return ((string)(this[this.tableutfVPRT_EMPLOYEE.driver_licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'driver_license\' в таблице \'utfVPRT_EMPLOYEE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVPRT_EMPLOYEE.driver_licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableutfVPRT_EMPLOYEE.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_statusNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sys_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_statusNull() {
                this[this.tableutfVPRT_EMPLOYEE.sys_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_commentNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sys_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_commentNull() {
                this[this.tableutfVPRT_EMPLOYEE.sys_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_date_modifiedNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sys_date_modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_date_modifiedNull() {
                this[this.tableutfVPRT_EMPLOYEE.sys_date_modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_date_createdNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sys_date_createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_date_createdNull() {
                this[this.tableutfVPRT_EMPLOYEE.sys_date_createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_user_modifiedNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sys_user_modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_user_modifiedNull() {
                this[this.tableutfVPRT_EMPLOYEE.sys_user_modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_user_createdNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sys_user_createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_user_createdNull() {
                this[this.tableutfVPRT_EMPLOYEE.sys_user_createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorganization_idNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.organization_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorganization_idNull() {
                this[this.tableutfVPRT_EMPLOYEE.organization_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isperson_idNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.person_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setperson_idNull() {
                this[this.tableutfVPRT_EMPLOYEE.person_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemployee_type_idNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.employee_type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemployee_type_idNull() {
                this[this.tableutfVPRT_EMPLOYEE.employee_type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssexNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.sexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsexNull() {
                this[this.tableutfVPRT_EMPLOYEE.sexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIONull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.FIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIONull() {
                this[this.tableutfVPRT_EMPLOYEE.FIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthdateNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.birthdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthdateNull() {
                this[this.tableutfVPRT_EMPLOYEE.birthdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismobile_phoneNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.mobile_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmobile_phoneNull() {
                this[this.tableutfVPRT_EMPLOYEE.mobile_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishome_phoneNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.home_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethome_phoneNull() {
                this[this.tableutfVPRT_EMPLOYEE.home_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswork_phoneNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.work_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwork_phoneNull() {
                this[this.tableutfVPRT_EMPLOYEE.work_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isorg_nameNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.org_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setorg_nameNull() {
                this[this.tableutfVPRT_EMPLOYEE.org_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjob_titleNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.job_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjob_titleNull() {
                this[this.tableutfVPRT_EMPLOYEE.job_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslastnameNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.lastnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlastnameNull() {
                this[this.tableutfVPRT_EMPLOYEE.lastnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableutfVPRT_EMPLOYEE.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssurnameNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.surnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsurnameNull() {
                this[this.tableutfVPRT_EMPLOYEE.surnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshort_FIONull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.short_FIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshort_FIONull() {
                this[this.tableutfVPRT_EMPLOYEE.short_FIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_licenseNull() {
                return this.IsNull(this.tableutfVPRT_EMPLOYEE.driver_licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_licenseNull() {
                this[this.tableutfVPRT_EMPLOYEE.driver_licenseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class utfVPRT_EMPLOYEERowChangeEvent : global::System.EventArgs {
            
            private utfVPRT_EMPLOYEERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVPRT_EMPLOYEERowChangeEvent(utfVPRT_EMPLOYEERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVPRT_EMPLOYEERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Angel_to_001.ANGEL_TO_001_EmployeeTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class utfVPRT_EMPLOYEETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public utfVPRT_EMPLOYEETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "utfVPRT_EMPLOYEE";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("sys_status", "sys_status");
            tableMapping.ColumnMappings.Add("sys_comment", "sys_comment");
            tableMapping.ColumnMappings.Add("sys_date_modified", "sys_date_modified");
            tableMapping.ColumnMappings.Add("sys_date_created", "sys_date_created");
            tableMapping.ColumnMappings.Add("sys_user_modified", "sys_user_modified");
            tableMapping.ColumnMappings.Add("sys_user_created", "sys_user_created");
            tableMapping.ColumnMappings.Add("organization_id", "organization_id");
            tableMapping.ColumnMappings.Add("person_id", "person_id");
            tableMapping.ColumnMappings.Add("employee_type_id", "employee_type_id");
            tableMapping.ColumnMappings.Add("FIO", "FIO");
            tableMapping.ColumnMappings.Add("birthdate", "birthdate");
            tableMapping.ColumnMappings.Add("mobile_phone", "mobile_phone");
            tableMapping.ColumnMappings.Add("home_phone", "home_phone");
            tableMapping.ColumnMappings.Add("work_phone", "work_phone");
            tableMapping.ColumnMappings.Add("org_name", "org_name");
            tableMapping.ColumnMappings.Add("job_title", "job_title");
            tableMapping.ColumnMappings.Add("lastname", "lastname");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("surname", "surname");
            tableMapping.ColumnMappings.Add("sex", "sex");
            tableMapping.ColumnMappings.Add("short_FIO", "short_FIO");
            tableMapping.ColumnMappings.Add("driver_license", "driver_license");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "dbo.uspVPRT_EMPLOYEE_DeleteById";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_comment", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, "sys_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_user", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "sys_user_modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.uspVPRT_EMPLOYEE_SaveById";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.InputOutput, 38, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_organization_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "organization_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_person_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "person_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_employee_type_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "employee_type_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_driver_license", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_comment", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, "sys_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_user", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "sys_user_modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "dbo.uspVPRT_EMPLOYEE_SaveById";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.InputOutput, 38, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_organization_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "organization_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_person_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "person_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_employee_type_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "employee_type_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_driver_license", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_comment", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, "sys_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_user", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "sys_user_modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Angel_to_001.Properties.Settings.Default.ANGEL_TO_001_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.uspVPRT_Employee_SelectAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_Str", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_Srch_Type", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 3, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_Top_n_by_rank", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_date", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ANGEL_TO_001_Employee.utfVPRT_EMPLOYEEDataTable dataTable, string p_Str, global::System.Nullable<byte> p_Srch_Type, global::System.Nullable<short> p_Top_n_by_rank, global::System.Nullable<global::System.DateTime> p_date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_Str == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Str));
            }
            if ((p_Srch_Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((byte)(p_Srch_Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p_Top_n_by_rank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((short)(p_Top_n_by_rank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p_date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(p_date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ANGEL_TO_001_Employee.utfVPRT_EMPLOYEEDataTable GetData(string p_Str, global::System.Nullable<byte> p_Srch_Type, global::System.Nullable<short> p_Top_n_by_rank, global::System.Nullable<global::System.DateTime> p_date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_Str == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(p_Str));
            }
            if ((p_Srch_Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((byte)(p_Srch_Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p_Top_n_by_rank.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((short)(p_Top_n_by_rank.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p_date.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(p_date.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            ANGEL_TO_001_Employee.utfVPRT_EMPLOYEEDataTable dataTable = new ANGEL_TO_001_Employee.utfVPRT_EMPLOYEEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ANGEL_TO_001_Employee.utfVPRT_EMPLOYEEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ANGEL_TO_001_Employee dataSet) {
            return this.Adapter.Update(dataSet, "utfVPRT_EMPLOYEE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(global::System.Nullable<decimal> p_id, string p_sys_comment, string p_sys_user) {
            if ((p_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(p_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_sys_comment == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(p_sys_comment));
            }
            if ((p_sys_user == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(p_sys_user));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(ref global::System.Nullable<decimal> p_id, global::System.Nullable<decimal> p_organization_id, global::System.Nullable<decimal> p_person_id, global::System.Nullable<decimal> p_employee_type_id, string p_driver_license, string p_sys_comment, string p_sys_user) {
            if ((p_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(p_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_organization_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(p_organization_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p_person_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(p_person_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p_employee_type_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(p_employee_type_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p_driver_license == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p_driver_license));
            }
            if ((p_sys_comment == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p_sys_comment));
            }
            if ((p_sys_user == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p_sys_user));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                if (((this.Adapter.InsertCommand.Parameters[1].Value == null) 
                            || (this.Adapter.InsertCommand.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                    p_id = new global::System.Nullable<decimal>();
                }
                else {
                    p_id = new global::System.Nullable<decimal>(((decimal)(this.Adapter.InsertCommand.Parameters[1].Value)));
                }
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(ref global::System.Nullable<decimal> p_id, global::System.Nullable<decimal> p_organization_id, global::System.Nullable<decimal> p_person_id, global::System.Nullable<decimal> p_employee_type_id, string p_driver_license, string p_sys_comment, string p_sys_user) {
            if ((p_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(p_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_organization_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(p_organization_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p_person_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(p_person_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p_employee_type_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(p_employee_type_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p_driver_license == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p_driver_license));
            }
            if ((p_sys_comment == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p_sys_comment));
            }
            if ((p_sys_user == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p_sys_user));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                if (((this.Adapter.UpdateCommand.Parameters[1].Value == null) 
                            || (this.Adapter.UpdateCommand.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                    p_id = new global::System.Nullable<decimal>();
                }
                else {
                    p_id = new global::System.Nullable<decimal>(((decimal)(this.Adapter.UpdateCommand.Parameters[1].Value)));
                }
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591