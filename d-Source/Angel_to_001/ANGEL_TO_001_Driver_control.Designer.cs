//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Angel_to_001 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ANGEL_TO_001_Driver_control")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ANGEL_TO_001_Driver_control : global::System.Data.DataSet {
        
        private utfVDRV_DRIVER_CONTROLDataTable tableutfVDRV_DRIVER_CONTROL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ANGEL_TO_001_Driver_control() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ANGEL_TO_001_Driver_control(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["utfVDRV_DRIVER_CONTROL"] != null)) {
                    base.Tables.Add(new utfVDRV_DRIVER_CONTROLDataTable(ds.Tables["utfVDRV_DRIVER_CONTROL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public utfVDRV_DRIVER_CONTROLDataTable utfVDRV_DRIVER_CONTROL {
            get {
                return this.tableutfVDRV_DRIVER_CONTROL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ANGEL_TO_001_Driver_control cln = ((ANGEL_TO_001_Driver_control)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["utfVDRV_DRIVER_CONTROL"] != null)) {
                    base.Tables.Add(new utfVDRV_DRIVER_CONTROLDataTable(ds.Tables["utfVDRV_DRIVER_CONTROL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableutfVDRV_DRIVER_CONTROL = ((utfVDRV_DRIVER_CONTROLDataTable)(base.Tables["utfVDRV_DRIVER_CONTROL"]));
            if ((initTable == true)) {
                if ((this.tableutfVDRV_DRIVER_CONTROL != null)) {
                    this.tableutfVDRV_DRIVER_CONTROL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ANGEL_TO_001_Driver_control";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ANGEL_TO_001_Driver_control.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableutfVDRV_DRIVER_CONTROL = new utfVDRV_DRIVER_CONTROLDataTable();
            base.Tables.Add(this.tableutfVDRV_DRIVER_CONTROL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeutfVDRV_DRIVER_CONTROL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ANGEL_TO_001_Driver_control ds = new ANGEL_TO_001_Driver_control();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void utfVDRV_DRIVER_CONTROLRowChangeEventHandler(object sender, utfVDRV_DRIVER_CONTROLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class utfVDRV_DRIVER_CONTROLDataTable : global::System.Data.TypedTableBase<utfVDRV_DRIVER_CONTROLRow> {
            
            private global::System.Data.DataColumn columnsys_status;
            
            private global::System.Data.DataColumn columnsys_comment;
            
            private global::System.Data.DataColumn columnsys_date_modified;
            
            private global::System.Data.DataColumn columnsys_date_created;
            
            private global::System.Data.DataColumn columnsys_user_modified;
            
            private global::System.Data.DataColumn columnsys_user_created;
            
            private global::System.Data.DataColumn columncontrol_type_id;
            
            private global::System.Data.DataColumn columncontrol_type_name;
            
            private global::System.Data.DataColumn columnemployee_id;
            
            private global::System.Data.DataColumn columndriver_list_id;
            
            private global::System.Data.DataColumn columnFIO_control_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVDRV_DRIVER_CONTROLDataTable() {
                this.TableName = "utfVDRV_DRIVER_CONTROL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal utfVDRV_DRIVER_CONTROLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected utfVDRV_DRIVER_CONTROLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_statusColumn {
                get {
                    return this.columnsys_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_commentColumn {
                get {
                    return this.columnsys_comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_date_modifiedColumn {
                get {
                    return this.columnsys_date_modified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_date_createdColumn {
                get {
                    return this.columnsys_date_created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_user_modifiedColumn {
                get {
                    return this.columnsys_user_modified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sys_user_createdColumn {
                get {
                    return this.columnsys_user_created;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn control_type_idColumn {
                get {
                    return this.columncontrol_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn control_type_nameColumn {
                get {
                    return this.columncontrol_type_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn employee_idColumn {
                get {
                    return this.columnemployee_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_list_idColumn {
                get {
                    return this.columndriver_list_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIO_control_typeColumn {
                get {
                    return this.columnFIO_control_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVDRV_DRIVER_CONTROLRow this[int index] {
                get {
                    return ((utfVDRV_DRIVER_CONTROLRow)(this.Rows[index]));
                }
            }
            
            public event utfVDRV_DRIVER_CONTROLRowChangeEventHandler utfVDRV_DRIVER_CONTROLRowChanging;
            
            public event utfVDRV_DRIVER_CONTROLRowChangeEventHandler utfVDRV_DRIVER_CONTROLRowChanged;
            
            public event utfVDRV_DRIVER_CONTROLRowChangeEventHandler utfVDRV_DRIVER_CONTROLRowDeleting;
            
            public event utfVDRV_DRIVER_CONTROLRowChangeEventHandler utfVDRV_DRIVER_CONTROLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddutfVDRV_DRIVER_CONTROLRow(utfVDRV_DRIVER_CONTROLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVDRV_DRIVER_CONTROLRow AddutfVDRV_DRIVER_CONTROLRow(byte sys_status, string sys_comment, System.DateTime sys_date_modified, System.DateTime sys_date_created, string sys_user_modified, string sys_user_created, decimal control_type_id, string control_type_name, decimal employee_id, decimal driver_list_id, string FIO_control_type) {
                utfVDRV_DRIVER_CONTROLRow rowutfVDRV_DRIVER_CONTROLRow = ((utfVDRV_DRIVER_CONTROLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        sys_status,
                        sys_comment,
                        sys_date_modified,
                        sys_date_created,
                        sys_user_modified,
                        sys_user_created,
                        control_type_id,
                        control_type_name,
                        employee_id,
                        driver_list_id,
                        FIO_control_type};
                rowutfVDRV_DRIVER_CONTROLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowutfVDRV_DRIVER_CONTROLRow);
                return rowutfVDRV_DRIVER_CONTROLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                utfVDRV_DRIVER_CONTROLDataTable cln = ((utfVDRV_DRIVER_CONTROLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new utfVDRV_DRIVER_CONTROLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsys_status = base.Columns["sys_status"];
                this.columnsys_comment = base.Columns["sys_comment"];
                this.columnsys_date_modified = base.Columns["sys_date_modified"];
                this.columnsys_date_created = base.Columns["sys_date_created"];
                this.columnsys_user_modified = base.Columns["sys_user_modified"];
                this.columnsys_user_created = base.Columns["sys_user_created"];
                this.columncontrol_type_id = base.Columns["control_type_id"];
                this.columncontrol_type_name = base.Columns["control_type_name"];
                this.columnemployee_id = base.Columns["employee_id"];
                this.columndriver_list_id = base.Columns["driver_list_id"];
                this.columnFIO_control_type = base.Columns["FIO_control_type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsys_status = new global::System.Data.DataColumn("sys_status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_status);
                this.columnsys_comment = new global::System.Data.DataColumn("sys_comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_comment);
                this.columnsys_date_modified = new global::System.Data.DataColumn("sys_date_modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_date_modified);
                this.columnsys_date_created = new global::System.Data.DataColumn("sys_date_created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_date_created);
                this.columnsys_user_modified = new global::System.Data.DataColumn("sys_user_modified", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_user_modified);
                this.columnsys_user_created = new global::System.Data.DataColumn("sys_user_created", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsys_user_created);
                this.columncontrol_type_id = new global::System.Data.DataColumn("control_type_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrol_type_id);
                this.columncontrol_type_name = new global::System.Data.DataColumn("control_type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrol_type_name);
                this.columnemployee_id = new global::System.Data.DataColumn("employee_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemployee_id);
                this.columndriver_list_id = new global::System.Data.DataColumn("driver_list_id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_list_id);
                this.columnFIO_control_type = new global::System.Data.DataColumn("FIO_control_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIO_control_type);
                this.columnsys_comment.MaxLength = 2000;
                this.columnsys_user_modified.MaxLength = 30;
                this.columnsys_user_created.MaxLength = 30;
                this.columncontrol_type_name.MaxLength = 30;
                this.columnFIO_control_type.MaxLength = 105;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVDRV_DRIVER_CONTROLRow NewutfVDRV_DRIVER_CONTROLRow() {
                return ((utfVDRV_DRIVER_CONTROLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new utfVDRV_DRIVER_CONTROLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(utfVDRV_DRIVER_CONTROLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.utfVDRV_DRIVER_CONTROLRowChanged != null)) {
                    this.utfVDRV_DRIVER_CONTROLRowChanged(this, new utfVDRV_DRIVER_CONTROLRowChangeEvent(((utfVDRV_DRIVER_CONTROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.utfVDRV_DRIVER_CONTROLRowChanging != null)) {
                    this.utfVDRV_DRIVER_CONTROLRowChanging(this, new utfVDRV_DRIVER_CONTROLRowChangeEvent(((utfVDRV_DRIVER_CONTROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.utfVDRV_DRIVER_CONTROLRowDeleted != null)) {
                    this.utfVDRV_DRIVER_CONTROLRowDeleted(this, new utfVDRV_DRIVER_CONTROLRowChangeEvent(((utfVDRV_DRIVER_CONTROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.utfVDRV_DRIVER_CONTROLRowDeleting != null)) {
                    this.utfVDRV_DRIVER_CONTROLRowDeleting(this, new utfVDRV_DRIVER_CONTROLRowChangeEvent(((utfVDRV_DRIVER_CONTROLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveutfVDRV_DRIVER_CONTROLRow(utfVDRV_DRIVER_CONTROLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ANGEL_TO_001_Driver_control ds = new ANGEL_TO_001_Driver_control();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "utfVDRV_DRIVER_CONTROLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class utfVDRV_DRIVER_CONTROLRow : global::System.Data.DataRow {
            
            private utfVDRV_DRIVER_CONTROLDataTable tableutfVDRV_DRIVER_CONTROL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal utfVDRV_DRIVER_CONTROLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableutfVDRV_DRIVER_CONTROL = ((utfVDRV_DRIVER_CONTROLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte sys_status {
                get {
                    try {
                        return ((byte)(this[this.tableutfVDRV_DRIVER_CONTROL.sys_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sys_status\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.sys_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sys_comment {
                get {
                    try {
                        return ((string)(this[this.tableutfVDRV_DRIVER_CONTROL.sys_commentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sys_comment\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.sys_commentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime sys_date_modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableutfVDRV_DRIVER_CONTROL.sys_date_modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sys_date_modified\' in table \'utfVDRV_DRIVER_CONTROL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.sys_date_modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime sys_date_created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableutfVDRV_DRIVER_CONTROL.sys_date_createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sys_date_created\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.sys_date_createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sys_user_modified {
                get {
                    try {
                        return ((string)(this[this.tableutfVDRV_DRIVER_CONTROL.sys_user_modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sys_user_modified\' in table \'utfVDRV_DRIVER_CONTROL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.sys_user_modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sys_user_created {
                get {
                    try {
                        return ((string)(this[this.tableutfVDRV_DRIVER_CONTROL.sys_user_createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sys_user_created\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.sys_user_createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal control_type_id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVDRV_DRIVER_CONTROL.control_type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'control_type_id\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.control_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string control_type_name {
                get {
                    try {
                        return ((string)(this[this.tableutfVDRV_DRIVER_CONTROL.control_type_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'control_type_name\' in table \'utfVDRV_DRIVER_CONTROL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.control_type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal employee_id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVDRV_DRIVER_CONTROL.employee_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'employee_id\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.employee_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal driver_list_id {
                get {
                    try {
                        return ((decimal)(this[this.tableutfVDRV_DRIVER_CONTROL.driver_list_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_list_id\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.driver_list_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIO_control_type {
                get {
                    try {
                        return ((string)(this[this.tableutfVDRV_DRIVER_CONTROL.FIO_control_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIO_control_type\' in table \'utfVDRV_DRIVER_CONTROL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableutfVDRV_DRIVER_CONTROL.FIO_control_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_statusNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.sys_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_statusNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.sys_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_commentNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.sys_commentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_commentNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.sys_commentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_date_modifiedNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.sys_date_modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_date_modifiedNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.sys_date_modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_date_createdNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.sys_date_createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_date_createdNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.sys_date_createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_user_modifiedNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.sys_user_modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_user_modifiedNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.sys_user_modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issys_user_createdNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.sys_user_createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsys_user_createdNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.sys_user_createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontrol_type_idNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.control_type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontrol_type_idNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.control_type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontrol_type_nameNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.control_type_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontrol_type_nameNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.control_type_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemployee_idNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.employee_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemployee_idNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.employee_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_list_idNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.driver_list_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_list_idNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.driver_list_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIO_control_typeNull() {
                return this.IsNull(this.tableutfVDRV_DRIVER_CONTROL.FIO_control_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIO_control_typeNull() {
                this[this.tableutfVDRV_DRIVER_CONTROL.FIO_control_typeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class utfVDRV_DRIVER_CONTROLRowChangeEvent : global::System.EventArgs {
            
            private utfVDRV_DRIVER_CONTROLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVDRV_DRIVER_CONTROLRowChangeEvent(utfVDRV_DRIVER_CONTROLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public utfVDRV_DRIVER_CONTROLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Angel_to_001.ANGEL_TO_001_Driver_controlTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class utfVDRV_DRIVER_CONTROLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public utfVDRV_DRIVER_CONTROLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "utfVDRV_DRIVER_CONTROL";
            tableMapping.ColumnMappings.Add("sys_status", "sys_status");
            tableMapping.ColumnMappings.Add("sys_comment", "sys_comment");
            tableMapping.ColumnMappings.Add("sys_date_modified", "sys_date_modified");
            tableMapping.ColumnMappings.Add("sys_date_created", "sys_date_created");
            tableMapping.ColumnMappings.Add("sys_user_modified", "sys_user_modified");
            tableMapping.ColumnMappings.Add("sys_user_created", "sys_user_created");
            tableMapping.ColumnMappings.Add("control_type_id", "control_type_id");
            tableMapping.ColumnMappings.Add("control_type_name", "control_type_name");
            tableMapping.ColumnMappings.Add("employee_id", "employee_id");
            tableMapping.ColumnMappings.Add("driver_list_id", "driver_list_id");
            tableMapping.ColumnMappings.Add("FIO_control_type", "FIO_control_type");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "dbo.uspVDRV_DRIVER_CONTROL_DeleteById";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_control_type_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "control_type_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_employee_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "employee_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_driver_list_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "driver_list_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_comment", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, "sys_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_user", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "sys_user_modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "dbo.uspVDRV_DRIVER_CONTROL_SaveById";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_control_type_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "control_type_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_employee_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "employee_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_driver_list_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "driver_list_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_comment", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, "sys_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_user", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "sys_user_modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "dbo.uspVDRV_DRIVER_CONTROL_SaveById";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.StoredProcedure;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_control_type_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "control_type_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_employee_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "employee_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_driver_list_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, "driver_list_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_comment", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, "sys_comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_sys_user", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, "sys_user_modified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Angel_to_001.Properties.Settings.Default.ANGEL_TO_001_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.uspVDRV_DRIVER_CONTROL_SelectById";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_control_type_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_employee_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_driver_list_id", global::System.Data.SqlDbType.Decimal, 17, global::System.Data.ParameterDirection.Input, 38, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ANGEL_TO_001_Driver_control.utfVDRV_DRIVER_CONTROLDataTable dataTable, global::System.Nullable<decimal> p_control_type_id, global::System.Nullable<decimal> p_employee_id, global::System.Nullable<decimal> p_driver_list_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_control_type_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p_control_type_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_employee_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(p_employee_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p_driver_list_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(p_driver_list_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ANGEL_TO_001_Driver_control.utfVDRV_DRIVER_CONTROLDataTable GetData(global::System.Nullable<decimal> p_control_type_id, global::System.Nullable<decimal> p_employee_id, global::System.Nullable<decimal> p_driver_list_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((p_control_type_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(p_control_type_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p_employee_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(p_employee_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p_driver_list_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((decimal)(p_driver_list_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            ANGEL_TO_001_Driver_control.utfVDRV_DRIVER_CONTROLDataTable dataTable = new ANGEL_TO_001_Driver_control.utfVDRV_DRIVER_CONTROLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ANGEL_TO_001_Driver_control.utfVDRV_DRIVER_CONTROLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ANGEL_TO_001_Driver_control dataSet) {
            return this.Adapter.Update(dataSet, "utfVDRV_DRIVER_CONTROL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
}

#pragma warning restore 1591